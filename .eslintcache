[{"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\index.tsx":"1","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\App.tsx":"2","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\SortingVisualiserPage.tsx":"3","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\SortingVisualiser\\index.jsx":"4","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\bubbleSort.ts":"5","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\selectionSort.ts":"6","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\insertionSort.ts":"7","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\InfoCard\\index.jsx":"8","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\quickSort.ts":"9","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\heapSort.ts":"10","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\mergeSort.ts":"11","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\Menu\\index.jsx":"12","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\AlgoriComputePage.jsx":"13","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\PathfindingVisualiserPage.jsx":"14","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\HomePage.jsx":"15","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\reverseArray.ts":"16","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\index.jsx":"17","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\Item.jsx":"18","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\Container.jsx":"19","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\Console\\index.jsx":"20"},{"size":231,"mtime":1611443855374,"results":"21","hashOfConfig":"22"},{"size":943,"mtime":1611572789686,"results":"23","hashOfConfig":"22"},{"size":250,"mtime":1611423060434,"results":"24","hashOfConfig":"22"},{"size":23352,"mtime":1612108664212,"results":"25","hashOfConfig":"22"},{"size":1431,"mtime":1612102504150,"results":"26","hashOfConfig":"22"},{"size":1559,"mtime":1611579522880,"results":"27","hashOfConfig":"22"},{"size":1466,"mtime":1611580219756,"results":"28","hashOfConfig":"22"},{"size":2910,"mtime":1612000299914,"results":"29","hashOfConfig":"22"},{"size":563,"mtime":1611930831467,"results":"30","hashOfConfig":"22"},{"size":1980,"mtime":1611693902042,"results":"31","hashOfConfig":"22"},{"size":2072,"mtime":1611924758095,"results":"32","hashOfConfig":"22"},{"size":1714,"mtime":1611653075220,"results":"33","hashOfConfig":"22"},{"size":133,"mtime":1611570216976,"results":"34","hashOfConfig":"22"},{"size":162,"mtime":1611570151206,"results":"35","hashOfConfig":"22"},{"size":1178,"mtime":1611936988070,"results":"36","hashOfConfig":"22"},{"size":1199,"mtime":1611585890443,"results":"37","hashOfConfig":"22"},{"size":67,"mtime":1611845343871,"results":"38","hashOfConfig":"22"},{"size":1424,"mtime":1611913560946,"results":"39","hashOfConfig":"22"},{"size":235,"mtime":1611847446709,"results":"40","hashOfConfig":"22"},{"size":1844,"mtime":1612109208105,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"17wj5ys",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\index.tsx",[],["91","92"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\App.tsx",["93"],"import React from 'react';\nimport './App.css';\nimport Menu from './components/Menu';\nimport SortingVisualiserPage from './pages/SortingVisualiserPage';\n\n\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\nimport PathfindingVisualiserPage from './pages/PathfindingVisualiserPage';\nimport AlgoriComputePage from './pages/AlgoriComputePage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/sort'>\n            <SortingVisualiserPage />\n          </Route>\n          <Route path='/pathfind'>\n            <PathfindingVisualiserPage />\n          </Route>\n          <Route path='/compute'>\n            <AlgoriComputePage />\n          </Route>\n          <Route path='/'>\n            <HomePage />\n          </Route>\n        </Switch>\n        \n        <Menu/>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\SortingVisualiserPage.tsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\SortingVisualiser\\index.jsx",["94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\bubbleSort.ts",["121","122"],"\r\n\r\n\r\n\r\nfunction sort(array: number[]): [number[],object[],number]{\r\n    const startTime = performance.now()\r\n    let sortedArray: number[] = array\r\n    let animations: object[] = []\r\n\r\n    for (let i = 0; i < sortedArray.length - 1; i++){\r\n        \r\n        for (let j = 0; j < sortedArray.length - 1 - i; j++){\r\n            animations.push([\"setColor\", [j,j+1], \"$CHECKING\"])\r\n            if (sortedArray[j] > sortedArray[j+1]){\r\n                const tmp = sortedArray[j]\r\n                sortedArray[j] = sortedArray[j+1]\r\n                sortedArray[j+1] = tmp \r\n                animations.push([\"swap\",j,j+1])\r\n            }\r\n            animations.push([\"setColor\",[j,j+1],\"$BASE\"])\r\n        }\r\n        animations.push([\"setColor\",[sortedArray.length - 1 - i],\"$DONE\"])\r\n    }\r\n\r\n   \r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    animations.push([\"setColor\", [0], \"$DONE\"])\r\n    animations.push([\"endAnimation\"])\r\n\r\n    let endAni = []\r\n    endAni.push([\"setRunTimeDisplay\", Math.round(runTime * 1000) / 1000])\r\n    endAni.push([\"startAnimation\"])\r\n\r\n    console.log(\"EXEC\")\r\n\r\n    animations.unshift([\"doSim\", endAni])\r\n    return [sortedArray, animations, runTime]\r\n\r\n}\r\n\r\nfunction bubbleSort(array: number[]): any{\r\n    let [sortedArray, animations, runTime] = sort(array)\r\n\r\n    let command = [\"do\", animations, \"$userSet\"]\r\n    return (command)\r\n}\r\n\r\n\r\nexport default bubbleSort","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\selectionSort.ts",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\insertionSort.ts",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\InfoCard\\index.jsx",[],["123","124"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\quickSort.ts",["125","126"],"const COLORS = {\r\n    BASE: '#035efc',\r\n    BEING_CHECKED: '#fc0388',\r\n    DONE: '#15ba09'\r\n}\r\n\r\n\r\n\r\nfunction sort(array: any, animations: any): any {\r\n \r\n\r\n\r\n}\r\n\r\nfunction quickSort(array: number[]): [object[],number]{\r\n    const startTime = performance.now()\r\n    let animations: object[] = []\r\n\r\n\r\n    let sortedArray = sort(array,animations)\r\n\r\n\r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    //animations = [{command: 'setArray',array: sortedArray}]\r\n\r\n    return [animations, runTime]\r\n}\r\n\r\n\r\nexport default quickSort","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\heapSort.ts",["127","128"],"// FROM: https://levelup.gitconnected.com/heapsort-for-javascript-newbies-598d25477d55\r\n//TODO: Improve Animations\r\n\r\n\r\nfunction swap(array: number[], idx1: number, idx2: number, animations: object[]){\r\n    let tmp = array[idx1]\r\n    array[idx1] = array[idx2]\r\n    array[idx2] = tmp\r\n    animations.push({command: 'swap',id1: idx1, id2: idx2})\r\n}\r\n\r\n\r\nfunction heapify(array: number[], length: number, idx: number, animations: object[]){\r\n    let largest:number = idx\r\n    let left:number = idx * 2 + 1\r\n    let right:number = left + 1\r\n\r\n    animations.push({command: 'setColor',id: [left,right],color: '?$BEING_CHECKED'})\r\n\r\n    if(left < length && array[left] > array[largest]) {\r\n        largest = left\r\n    }\r\n\r\n    if(right < length && array[right] > array[largest]){\r\n        largest = right\r\n    }\r\n\r\n    animations.push({command: 'setColor',id: [left,right],color: '?$BASE'})\r\n\r\n    if(largest != idx){\r\n        swap(array, idx, largest, animations)\r\n        heapify(array, length, largest, animations)\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction sort(array: number[], animations: object[]){\r\n    let length = array.length\r\n    let idx = Math.floor(length / 2 - 1)\r\n    let k = length - 1;\r\n\r\n    while (idx >= 0) {\r\n        heapify(array, length, idx, animations)\r\n        idx--\r\n    }\r\n\r\n    while(k >= 0){\r\n        swap(array, 0, k, animations)\r\n        heapify(array, k, 0, animations)\r\n        //animations.push({command: 'setColor',id: [k],color: '$DONE'})\r\n        k--\r\n    }\r\n\r\n    return array\r\n}\r\n\r\n\r\n\r\nfunction heapSort(array: number[]){\r\n    let startTime = performance.now()\r\n    var animations: object[] = [];\r\n    let sortedArray = sort(array, animations)\r\n\r\n    let endTime = performance.now()\r\n\r\n    let idxs:number[] = []\r\n    for (let i = 0; i < array.length; i++){\r\n        idxs.push(i)\r\n    }\r\n    animations.push({command: 'setColor',id: idxs, color: '$DONE'})\r\n\r\n\r\n    let runTime = endTime - startTime\r\n    return [animations, runTime]\r\n}\r\n\r\nexport default heapSort","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\mergeSort.ts",["129","130","131","132"],"import { create } from \"domain\"\r\n\r\nconst COLORS = {\r\n    BASE: '#035efc',\r\n    BEING_CHECKED: '#fc0388',\r\n    DONE: '#15ba09'\r\n}\r\n\r\nfunction swap(array: any, idx1: number, idx2: number, animations: object[]){\r\n    let tmp = array[idx1]\r\n    array[idx1] = array[idx2]\r\n    array[idx2] = tmp\r\n    animations.push({command: 'swap',id1: array[idx1][0], id2: array[idx2][0]})\r\n}\r\n\r\n\r\nfunction mergeArrays(leftArray: any, rightArray: any, animations: any){\r\n    let leftIndex = 0 , rightIndex = 0\r\n\r\n    console.log(leftArray)\r\n\r\n    while(leftIndex < leftArray.length && rightIndex < rightArray.length){\r\n        animations.push({command: 'swap',id1: rightArray[rightIndex][0], id2: rightArray[rightIndex][0]})\r\n        let tmp = leftArray[leftIndex]\r\n        leftArray[leftIndex] = rightArray[rightIndex]\r\n        rightArray[rightIndex] = tmp\r\n        if (leftArray[leftIndex][1] < rightArray[rightIndex][1]){\r\n            leftIndex++\r\n        } else {\r\n            rightIndex++\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return \r\n}\r\n\r\n\r\n\r\nfunction sort(array: any, animations: any): any {\r\n    if (array.length <= 1) return array\r\n\r\n    const middle = Math.floor(array.length / 2);\r\n\r\n    const left = array.slice(0,middle);\r\n    const right = array.slice(middle);\r\n\r\n    return mergeArrays(sort(left,animations), sort(right,animations),animations)\r\n\r\n}\r\n\r\n\r\nfunction createIndexedArray(array: number[]){\r\n    let indexedArray = []\r\n    for (let i = 0; i < array.length - 1; i++){\r\n        indexedArray.push([i,array[i]])\r\n    }\r\n\r\n    return indexedArray\r\n}\r\n\r\nfunction mergeSort(array: number[]): [object[],number]{\r\n    const startTime = performance.now()\r\n    let animations: object[] = []\r\n    let sortedArray: number[];\r\n\r\n    let indexedArray: number[][] = createIndexedArray(array)\r\n\r\n\r\n    sortedArray = sort(indexedArray,animations)\r\n\r\n\r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    //animations = [{command: 'setArray',array: sortedArray}]\r\n\r\n    console.log(animations)\r\n    return [animations, runTime]\r\n}\r\n\r\n\r\nexport default mergeSort","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\Menu\\index.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\AlgoriComputePage.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\PathfindingVisualiserPage.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\HomePage.jsx",["133","134"],"import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Container from '../components/ChangeLog/Container'\r\nimport Item from '../components/ChangeLog/Item'\r\n\r\n\r\nimport changeLogItems from '../data/changelogData.json'\r\n\r\n\r\nfunction HomePage(){\r\n    const [isAllOpen, setIsAllOpen] = useState(false)\r\n    console.log(isAllOpen)\r\n    \r\n    let changeItems = changeLogItems.map((value, idx) => {\r\n        let dontDisplay = false\r\n        dontDisplay = value.dontDisplay\r\n        if (!dontDisplay) return <Item key={idx}  isOpen={isAllOpen} changes={value.modifications} date={value.isNext ? `Planned for ${value.date}` : value.date} version={value.isNext ? 'Next update' : value.version} title={value.title}> <p>{value.info}</p> </Item>\r\n    \r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div className='changeLog'>\r\n            <div className='openAllChangesButton' onClick={() => setIsAllOpen(!isAllOpen)}>{isAllOpen ? 'Close All' : 'Open All'}</div>\r\n            <Container titleBgColor='' titleTxtColor='' infoBgColor='' infoTxtColor=''>\r\n                {changeItems}\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HomePage","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\reverseArray.ts",["135"],"\r\nfunction sort(array: any, animations: any): any {\r\n    let sortedArray = array.slice()\r\n\r\n    for (let i = 0; i < Math.floor(sortedArray.length / 2); i++){\r\n        animations.push({command: 'setColor',id: [i,(sortedArray.length-1-i)],color: '$BEING_CHECKED'})\r\n        let tmp = sortedArray[i]\r\n        sortedArray[i] = sortedArray[sortedArray.length-1-i]\r\n        sortedArray[sortedArray.length-1-i] = tmp\r\n        animations.push({command: 'swap',id1: i, id2: (sortedArray.length-1-i)})\r\n        animations.push({command: 'setColor',id: [i,(sortedArray.length-1-i)],color: '$DONE'})\r\n    }\r\n\r\n    animations.push({command: 'setColor',id: [(Math.ceil(sortedArray.length / 2)) - 1],color: '$DONE'})\r\n\r\n    return [sortedArray, animations]\r\n\r\n\r\n}\r\n\r\nfunction reverseArray(array: number[]): [object[],number]{\r\n    const startTime = performance.now()\r\n    let animations: object[] = []\r\n    let sortedArray: number[];\r\n\r\n\r\n    [sortedArray, animations] = sort(array,animations)\r\n\r\n\r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    //animations = [{command: 'setArray',array: sortedArray}]\r\n\r\n    return [animations, runTime]\r\n}\r\n\r\n\r\nexport default reverseArray","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\index.jsx",["136","137"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\Item.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\Container.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\Console\\index.jsx",["138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":7,"column":34,"nodeType":"145","messageId":"146","endLine":7,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":30,"column":12,"nodeType":"145","messageId":"146","endLine":30,"endColumn":17},{"ruleId":"147","severity":1,"message":"149","line":31,"column":12,"nodeType":"145","messageId":"146","endLine":31,"endColumn":23},{"ruleId":"150","severity":1,"message":"151","line":47,"column":8,"nodeType":"152","endLine":47,"endColumn":10,"suggestions":"153"},{"ruleId":"147","severity":1,"message":"154","line":54,"column":17,"nodeType":"145","messageId":"146","endLine":54,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":109,"column":30,"nodeType":"157","messageId":"158","endLine":109,"endColumn":32},{"ruleId":"155","severity":1,"message":"156","line":109,"column":43,"nodeType":"157","messageId":"158","endLine":109,"endColumn":45},{"ruleId":"155","severity":1,"message":"156","line":110,"column":30,"nodeType":"157","messageId":"158","endLine":110,"endColumn":32},{"ruleId":"155","severity":1,"message":"156","line":110,"column":43,"nodeType":"157","messageId":"158","endLine":110,"endColumn":45},{"ruleId":"155","severity":1,"message":"156","line":244,"column":35,"nodeType":"157","messageId":"158","endLine":244,"endColumn":37},{"ruleId":"159","severity":1,"message":"160","line":244,"column":47,"nodeType":"161","messageId":"162","endLine":244,"endColumn":49},{"ruleId":"155","severity":1,"message":"156","line":244,"column":52,"nodeType":"157","messageId":"158","endLine":244,"endColumn":54},{"ruleId":"155","severity":1,"message":"163","line":244,"column":52,"nodeType":"157","messageId":"158","endLine":244,"endColumn":54},{"ruleId":"155","severity":1,"message":"163","line":244,"column":84,"nodeType":"157","messageId":"158","endLine":244,"endColumn":86},{"ruleId":"159","severity":1,"message":"160","line":244,"column":96,"nodeType":"161","messageId":"162","endLine":244,"endColumn":98},{"ruleId":"159","severity":1,"message":"164","line":245,"column":34,"nodeType":"161","messageId":"162","endLine":245,"endColumn":36},{"ruleId":"159","severity":1,"message":"164","line":247,"column":34,"nodeType":"161","messageId":"162","endLine":247,"endColumn":36},{"ruleId":"155","severity":1,"message":"156","line":283,"column":34,"nodeType":"157","messageId":"158","endLine":283,"endColumn":36},{"ruleId":"155","severity":1,"message":"156","line":283,"column":51,"nodeType":"157","messageId":"158","endLine":283,"endColumn":53},{"ruleId":"155","severity":1,"message":"156","line":284,"column":46,"nodeType":"157","messageId":"158","endLine":284,"endColumn":48},{"ruleId":"155","severity":1,"message":"156","line":284,"column":75,"nodeType":"157","messageId":"158","endLine":284,"endColumn":77},{"ruleId":"165","severity":1,"message":"166","line":367,"column":21,"nodeType":"167","messageId":"168","endLine":367,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":383,"column":9,"nodeType":"171","messageId":"172","endLine":394,"endColumn":10},{"ruleId":"169","severity":1,"message":"170","line":425,"column":9,"nodeType":"171","messageId":"172","endLine":455,"endColumn":10},{"ruleId":"165","severity":1,"message":"166","line":439,"column":17,"nodeType":"173","messageId":"168","endLine":441,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":448,"column":17,"nodeType":"173","messageId":"168","endLine":450,"endColumn":23},{"ruleId":"147","severity":1,"message":"174","line":470,"column":14,"nodeType":"145","messageId":"146","endLine":470,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":471,"column":19,"nodeType":"161","messageId":"162","endLine":471,"endColumn":21},{"ruleId":"143","severity":1,"message":"175","line":44,"column":10,"nodeType":"145","messageId":"146","endLine":44,"endColumn":21},{"ruleId":"143","severity":1,"message":"176","line":44,"column":35,"nodeType":"145","messageId":"146","endLine":44,"endColumn":42},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"177","line":1,"column":7,"nodeType":"145","messageId":"146","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"175","line":20,"column":9,"nodeType":"145","messageId":"146","endLine":20,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":30,"column":16,"nodeType":"161","messageId":"162","endLine":30,"endColumn":18},{"ruleId":"143","severity":1,"message":"175","line":63,"column":9,"nodeType":"145","messageId":"146","endLine":63,"endColumn":20},{"ruleId":"143","severity":1,"message":"178","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":16},{"ruleId":"143","severity":1,"message":"177","line":3,"column":7,"nodeType":"145","messageId":"146","endLine":3,"endColumn":13},{"ruleId":"143","severity":1,"message":"179","line":9,"column":10,"nodeType":"145","messageId":"146","endLine":9,"endColumn":14},{"ruleId":"143","severity":1,"message":"175","line":71,"column":5,"nodeType":"145","messageId":"146","endLine":71,"endColumn":16},{"ruleId":"147","severity":1,"message":"144","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":18},{"ruleId":"180","severity":1,"message":"181","line":14,"column":55,"nodeType":"182","messageId":"183","endLine":14,"endColumn":57},{"ruleId":"143","severity":1,"message":"175","line":27,"column":6,"nodeType":"145","messageId":"146","endLine":27,"endColumn":17},{"ruleId":"147","severity":1,"message":"184","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":13},{"ruleId":"147","severity":1,"message":"185","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"160","line":24,"column":19,"nodeType":"161","messageId":"162","endLine":24,"endColumn":21},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-unused-vars","'swaps' is assigned a value but never used.","'comparisons' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'AnimateEngine' and 'numBars'. Either include them or remove the dependency array.","ArrayExpression",["188"],"'response' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Unexpected mix of '||' and '&&'.","Expected '===' and instead saw '=='.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","ExpressionStatement","'handleConsole' is defined but never used.","'sortedArray' is assigned a value but never used.","'runTime' is assigned a value but never used.","'COLORS' is assigned a value but never used.","'create' is defined but never used.","'swap' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'React' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},"Update the dependencies array to be: [AnimateEngine, numBars]",{"range":"191","text":"192"},[1802,1804],"[AnimateEngine, numBars]"]