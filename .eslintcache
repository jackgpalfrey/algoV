[{"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\index.tsx":"1","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\App.tsx":"2","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\SortingVisualiserPage.tsx":"3","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\SortingVisualiser\\index.jsx":"4","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\bubbleSort.ts":"5","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\selectionSort.ts":"6","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\insertionSort.ts":"7","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\InfoCard\\index.jsx":"8","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\quickSort.ts":"9","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\heapSort.ts":"10","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\mergeSort.ts":"11","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\Menu\\index.jsx":"12","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\AlgoriComputePage.jsx":"13","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\PathfindingVisualiserPage.jsx":"14","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\HomePage.jsx":"15","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\reverseArray.ts":"16","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\index.jsx":"17","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\Item.jsx":"18","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\Container.jsx":"19"},{"size":231,"mtime":1611443855374,"results":"20","hashOfConfig":"21"},{"size":943,"mtime":1611572789686,"results":"22","hashOfConfig":"21"},{"size":250,"mtime":1611423060434,"results":"23","hashOfConfig":"21"},{"size":8913,"mtime":1611693889230,"results":"24","hashOfConfig":"21"},{"size":1285,"mtime":1611531796731,"results":"25","hashOfConfig":"21"},{"size":1559,"mtime":1611579522880,"results":"26","hashOfConfig":"21"},{"size":1466,"mtime":1611580219756,"results":"27","hashOfConfig":"21"},{"size":1984,"mtime":1611665663364,"results":"28","hashOfConfig":"21"},{"size":1393,"mtime":1611501725303,"results":"29","hashOfConfig":"21"},{"size":1980,"mtime":1611693902042,"results":"30","hashOfConfig":"21"},{"size":602,"mtime":1611581104904,"results":"31","hashOfConfig":"21"},{"size":1714,"mtime":1611653075220,"results":"32","hashOfConfig":"21"},{"size":133,"mtime":1611570216976,"results":"33","hashOfConfig":"21"},{"size":162,"mtime":1611570151206,"results":"34","hashOfConfig":"21"},{"size":664,"mtime":1611846875300,"results":"35","hashOfConfig":"21"},{"size":1199,"mtime":1611585890443,"results":"36","hashOfConfig":"21"},{"size":67,"mtime":1611845343871,"results":"37","hashOfConfig":"21"},{"size":594,"mtime":1611845355623,"results":"38","hashOfConfig":"21"},{"size":235,"mtime":1611847446709,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"17wj5ys",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\index.tsx",[],["85","86"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\App.tsx",["87"],"import React from 'react';\nimport './App.css';\nimport Menu from './components/Menu';\nimport SortingVisualiserPage from './pages/SortingVisualiserPage';\n\n\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\nimport PathfindingVisualiserPage from './pages/PathfindingVisualiserPage';\nimport AlgoriComputePage from './pages/AlgoriComputePage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/sort'>\n            <SortingVisualiserPage />\n          </Route>\n          <Route path='/pathfind'>\n            <PathfindingVisualiserPage />\n          </Route>\n          <Route path='/compute'>\n            <AlgoriComputePage />\n          </Route>\n          <Route path='/'>\n            <HomePage />\n          </Route>\n        </Switch>\n        \n        <Menu/>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\SortingVisualiserPage.tsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\SortingVisualiser\\index.jsx",["88","89","90","91","92","93","94","95","96","97"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\bubbleSort.ts",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\selectionSort.ts",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\insertionSort.ts",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\InfoCard\\index.jsx",["98"],"import React, { useState } from 'react'\r\nimport './style.css'\r\nimport data from '../../data/algorithmInfo.json'\r\nimport { setOriginalNode } from 'typescript'\r\n\r\n\r\nfunction InfoCard({algorithmType, algorithmID}){\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isOpenHover, setIsOpenHover] = useState(false)\r\n    \r\n    console.log('INFO')\r\n\r\n    let title = 'No Information Available'\r\n    let complexity = ''\r\n    let descriptionArray = []\r\n    let creditText = ''\r\n    let credit = ''\r\n\r\n    if (data[algorithmType][algorithmID]){\r\n        title = data[algorithmType][algorithmID].title\r\n        complexity = data[algorithmType][algorithmID].avgTimeComplexity\r\n        descriptionArray = data[algorithmType][algorithmID].description.split('\\n')\r\n        creditText = data[algorithmType][algorithmID].creditText || 'Description From'\r\n        credit = data[algorithmType][algorithmID].credit\r\n    }\r\n    \r\n\r\n    let card = (<div className='card' onMouseOver={() => setIsOpenHover(true)} onMouseLeave={() => setIsOpenHover(false)}>\r\n                    <p className='title'>{title}</p>\r\n                    <hr></hr>\r\n                    <p className='meta'>{`Average Time Complexity: ${complexity}`}</p>\r\n                    <hr></hr>\r\n                    {descriptionArray.map((item,idx) => <p className='description'>{item}</p>)}\r\n                    {credit ? <a className='credit' href={credit} >{`${creditText}: ${credit}`}</a> : null}     \r\n                </div>)\r\n    return (\r\n            <div className='card-container' onMouseOver={() => setIsOpenHover(true)} onMouseLeave={() => setIsOpenHover(false)} >\r\n                {isOpen || isOpenHover ? card : null}\r\n                <button onClick={() => setIsOpen(!isOpen)} className='openCardButton' >\r\n                {isOpen ? <i className=\"material-icons \">close</i> : <i className=\"material-icons \">info</i> }\r\n                </button>  \r\n            </div>\r\n            )\r\n\r\n    }\r\n\r\nexport default InfoCard",["99","100"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\quickSort.ts",["101"],"const COLORS = {\r\n    BASE: '#035efc',\r\n    BEING_CHECKED: '#fc0388',\r\n    DONE: '#15ba09'\r\n}\r\n\r\n\r\n\r\nfunction sort(array: any, animations: any): any {\r\n    if (array.length === 1){\r\n        return array\r\n    }\r\n\r\n    const pivot = array[array.length - 1]\r\n    let leftArray = []\r\n    let rightArray = []\r\n    for (let i = 0; i < array.length - 1; i++){\r\n        if (array[i] < pivot){\r\n            leftArray.push(array[i])\r\n            animations.push({command: 'setColor',id: [i],color: COLORS.BEING_CHECKED})\r\n        } else {\r\n            animations.push({command: 'setColor',id: [i],color: COLORS.DONE})\r\n            rightArray.push(array[i])\r\n        }\r\n    }\r\n\r\n\r\n    if (leftArray.length > 0 && rightArray.length > 0){\r\n        return [...sort(leftArray,animations), pivot, ...sort(rightArray,animations)]\r\n    } else if (leftArray.length > 0){\r\n        return [...sort(leftArray,animations), pivot]\r\n    } else {\r\n        return [pivot, ...sort(rightArray,animations)]\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction quickSort(array: number[]): [object[],number]{\r\n    const startTime = performance.now()\r\n    let animations: object[] = []\r\n\r\n\r\n    let sortedArray = sort(array,animations)\r\n\r\n\r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    //animations = [{command: 'setArray',array: sortedArray}]\r\n\r\n    return [animations, runTime]\r\n}\r\n\r\n\r\nexport default quickSort","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\heapSort.ts",["102","103"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\mergeSort.ts",["104","105"],"const COLORS = {\r\n    BASE: '#035efc',\r\n    BEING_CHECKED: '#fc0388',\r\n    DONE: '#15ba09'\r\n}\r\n\r\n\r\n\r\nfunction sort(array: any, animations: any): any {\r\n\r\n\r\n}\r\n\r\nfunction mergeSort(array: number[]): [object[],number]{\r\n    const startTime = performance.now()\r\n    let animations: object[] = []\r\n    let sortedArray: number[];\r\n\r\n\r\n    [sortedArray, animations] = sort(array,animations)\r\n\r\n\r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    //animations = [{command: 'setArray',array: sortedArray}]\r\n\r\n    return [animations, runTime]\r\n}\r\n\r\n\r\nexport default mergeSort","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\Menu\\index.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\AlgoriComputePage.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\PathfindingVisualiserPage.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\HomePage.jsx",["106"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\reverseArray.ts",["107"],"\r\nfunction sort(array: any, animations: any): any {\r\n    let sortedArray = array.slice()\r\n\r\n    for (let i = 0; i < Math.floor(sortedArray.length / 2); i++){\r\n        animations.push({command: 'setColor',id: [i,(sortedArray.length-1-i)],color: '$BEING_CHECKED'})\r\n        let tmp = sortedArray[i]\r\n        sortedArray[i] = sortedArray[sortedArray.length-1-i]\r\n        sortedArray[sortedArray.length-1-i] = tmp\r\n        animations.push({command: 'swap',id1: i, id2: (sortedArray.length-1-i)})\r\n        animations.push({command: 'setColor',id: [i,(sortedArray.length-1-i)],color: '$DONE'})\r\n    }\r\n\r\n    animations.push({command: 'setColor',id: [(Math.ceil(sortedArray.length / 2)) - 1],color: '$DONE'})\r\n\r\n    return [sortedArray, animations]\r\n\r\n\r\n}\r\n\r\nfunction reverseArray(array: number[]): [object[],number]{\r\n    const startTime = performance.now()\r\n    let animations: object[] = []\r\n    let sortedArray: number[];\r\n\r\n\r\n    [sortedArray, animations] = sort(array,animations)\r\n\r\n\r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    //animations = [{command: 'setArray',array: sortedArray}]\r\n\r\n    return [animations, runTime]\r\n}\r\n\r\n\r\nexport default reverseArray","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\index.jsx",["108","109"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\Item.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\Container.jsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":7,"column":34,"nodeType":"116","messageId":"117","endLine":7,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":29,"column":12,"nodeType":"116","messageId":"117","endLine":29,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":40,"column":8,"nodeType":"122","endLine":40,"endColumn":10,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":60,"column":17,"nodeType":"126","messageId":"127","endLine":93,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":68,"column":56,"nodeType":"130","messageId":"131","endLine":68,"endColumn":58},{"ruleId":"132","severity":1,"message":"133","line":76,"column":63,"nodeType":"134","messageId":"135","endLine":76,"endColumn":84},{"ruleId":"132","severity":1,"message":"133","line":77,"column":63,"nodeType":"134","messageId":"135","endLine":77,"endColumn":84},{"ruleId":"136","severity":1,"message":"137","line":99,"column":17,"nodeType":"138","messageId":"139","endLine":99,"endColumn":33},{"ruleId":"124","severity":1,"message":"125","line":136,"column":9,"nodeType":"126","messageId":"127","endLine":160,"endColumn":10},{"ruleId":"136","severity":1,"message":"137","line":148,"column":17,"nodeType":"140","messageId":"139","endLine":149,"endColumn":23},{"ruleId":"136","severity":1,"message":"137","line":155,"column":17,"nodeType":"140","messageId":"139","endLine":156,"endColumn":23},{"ruleId":"118","severity":1,"message":"141","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":25},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"142","line":44,"column":9,"nodeType":"116","messageId":"117","endLine":44,"endColumn":20},{"ruleId":"128","severity":1,"message":"143","line":30,"column":16,"nodeType":"130","messageId":"131","endLine":30,"endColumn":18},{"ruleId":"114","severity":1,"message":"142","line":63,"column":9,"nodeType":"116","messageId":"117","endLine":63,"endColumn":20},{"ruleId":"114","severity":1,"message":"144","line":1,"column":7,"nodeType":"116","messageId":"117","endLine":1,"endColumn":13},{"ruleId":"114","severity":1,"message":"142","line":20,"column":6,"nodeType":"116","messageId":"117","endLine":20,"endColumn":17},{"ruleId":"118","severity":1,"message":"115","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":18},{"ruleId":"114","severity":1,"message":"142","line":27,"column":6,"nodeType":"116","messageId":"117","endLine":27,"endColumn":17},{"ruleId":"118","severity":1,"message":"145","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"146","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-unused-vars","'isSorted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'numBars'. Either include it or remove the dependency array.","ArrayExpression",["149"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","ExpressionStatement","'setOriginalNode' is defined but never used.","'sortedArray' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'COLORS' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [numBars]",{"range":"152","text":"153"},[1472,1474],"[numBars]"]