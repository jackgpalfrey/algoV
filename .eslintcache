[{"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\index.tsx":"1","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\SortingVisualiserPage.tsx":"2","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\SortingVisualiser\\index.jsx":"3","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\bubbleSort.ts":"4","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\selectionSort.ts":"5","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\insertionSort.ts":"6","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\InfoCard\\index.jsx":"7","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\quickSort.ts":"8","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\heapSort.ts":"9","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\mergeSort.ts":"10","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\Menu\\index.jsx":"11","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\AlgoriComputePage.jsx":"12","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\PathfindingVisualiserPage.jsx":"13","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\HomePage.jsx":"14","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\reverseArray.ts":"15","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\index.jsx":"16","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\Item.jsx":"17","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\Container.jsx":"18","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\Console\\index.jsx":"19","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\PathfindingVisualiser\\index.jsx":"20","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\LatestChangesCard\\index.jsx":"21","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\App.jsx":"22","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\PathfindingVisualiser\\index-depr.jsx":"23","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\UnavailablePage.jsx":"24"},{"size":235,"mtime":1614858547970,"results":"25","hashOfConfig":"26"},{"size":250,"mtime":1611423060434,"results":"27","hashOfConfig":"26"},{"size":23755,"mtime":1614954550654,"results":"28","hashOfConfig":"26"},{"size":1596,"mtime":1614812593244,"results":"29","hashOfConfig":"26"},{"size":1780,"mtime":1614813972509,"results":"30","hashOfConfig":"26"},{"size":1561,"mtime":1614813439524,"results":"31","hashOfConfig":"26"},{"size":2917,"mtime":1614860059466,"results":"32","hashOfConfig":"26"},{"size":462,"mtime":1614872367345,"results":"33","hashOfConfig":"26"},{"size":2377,"mtime":1614872309764,"results":"34","hashOfConfig":"26"},{"size":1693,"mtime":1614872357091,"results":"35","hashOfConfig":"26"},{"size":1727,"mtime":1614861657832,"results":"36","hashOfConfig":"26"},{"size":133,"mtime":1611570216976,"results":"37","hashOfConfig":"26"},{"size":234,"mtime":1614872625389,"results":"38","hashOfConfig":"26"},{"size":1987,"mtime":1614851068037,"results":"39","hashOfConfig":"26"},{"size":1459,"mtime":1614814731519,"results":"40","hashOfConfig":"26"},{"size":67,"mtime":1611845343871,"results":"41","hashOfConfig":"26"},{"size":1451,"mtime":1614802677799,"results":"42","hashOfConfig":"26"},{"size":235,"mtime":1611847446709,"results":"43","hashOfConfig":"26"},{"size":1877,"mtime":1614872381537,"results":"44","hashOfConfig":"26"},{"size":184,"mtime":1614894992295,"results":"45","hashOfConfig":"26"},{"size":1500,"mtime":1614860349917,"results":"46","hashOfConfig":"26"},{"size":2529,"mtime":1614951553759,"results":"47","hashOfConfig":"26"},{"size":24105,"mtime":1614872520044,"results":"48","hashOfConfig":"26"},{"size":775,"mtime":1614951016918,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17wj5ys",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\index.tsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\SortingVisualiserPage.tsx",[],["109","110"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\SortingVisualiser\\index.jsx",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\bubbleSort.ts",["133","134"],"function sort(array: number[]): [number[],object[],number]{\r\n    const startTime = performance.now()\r\n    let sortedArray: number[] = array\r\n    let animations: object[] = []\r\n    let swaps = 0\r\n    let comparisons = 0\r\n\r\n    for (let i = 0; i < sortedArray.length - 1; i++){\r\n        \r\n        for (let j = 0; j < sortedArray.length - 1 - i; j++){\r\n            animations.push([\"setColor\", [j,j+1], \"$CHECKING\"])\r\n            comparisons++\r\n            if (sortedArray[j] > sortedArray[j+1]){\r\n                const tmp = sortedArray[j]\r\n                sortedArray[j] = sortedArray[j+1]\r\n                sortedArray[j+1] = tmp \r\n                animations.push([\"swap\",j,j+1])\r\n                swaps++\r\n            }\r\n            animations.push([\"setColor\",[j,j+1],\"$BASE\"])\r\n        }\r\n        animations.push([\"setColor\",[sortedArray.length - 1 - i],\"$DONE\"])\r\n    }\r\n\r\n   \r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    animations.push([\"setColor\", [0], \"$DONE\"])\r\n    animations.push([\"endAnimation\"])\r\n\r\n    let endAni = []\r\n    endAni.push([\"setRunTimeDisplay\", Math.round(runTime * 1000) / 1000])\r\n    endAni.push([\"setComparisonsDisplay\", comparisons])\r\n    endAni.push([\"setSwapsDisplay\", swaps])\r\n    endAni.push([\"startAnimation\"])\r\n\r\n\r\n    animations.unshift([\"doSim\", endAni])\r\n    return [sortedArray, animations, runTime]\r\n\r\n}\r\n\r\nfunction bubbleSort(array: number[]): any{\r\n    let [sortedArray, animations, runTime] = sort(array)\r\n\r\n    let command = [\"do\", animations, \"$userSet\"]\r\n    return (command)\r\n}\r\n\r\n\r\nexport default bubbleSort","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\selectionSort.ts",["135","136"],"const COLORS = {\r\n    CURRENT_MIN: '#3e09ba',\r\n}\r\n\r\n\r\nfunction sort(array: number[]) {\r\n    const startTime = performance.now()\r\n    let sortedArray: number[] = array\r\n    let animations: object[] = []\r\n    let swaps = 0\r\n    let comparisons = 0\r\n\r\n\r\n    for (let i = 0; i < sortedArray.length - 1; i++){\r\n        let minValIdx = i\r\n        for (let j = i + 1; j < sortedArray.length; j++){\r\n            animations.push([\"setColor\", [j], \"$CHECKING\"])\r\n            comparisons++\r\n            if (array[j] < array[minValIdx]){\r\n                animations.push([\"setColor\", [minValIdx], \"$BASE\"])\r\n                minValIdx = j\r\n                animations.push([\"setColor\", [j], COLORS.CURRENT_MIN])\r\n            } else {\r\n                animations.push([\"setColor\", [j,j+1], \"$BASE\"])\r\n            }  \r\n\r\n                      \r\n        }\r\n        swaps++\r\n        let tmp = array[i]\r\n        array[i] = array[minValIdx]\r\n        array[minValIdx] = tmp\r\n        animations.push([\"swap\", i, minValIdx])\r\n        animations.push([\"setColor\", [i], \"$DONE\"])\r\n    }\r\n\r\n    animations.push([\"setColor\", [-1], \"$DONE\"])\r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    animations.push([\"endAnimation\"])\r\n\r\n    let endAni = []\r\n    endAni.push([\"setRunTimeDisplay\", Math.round(runTime * 1000) / 1000])\r\n    endAni.push([\"setComparisonsDisplay\", comparisons])\r\n    endAni.push([\"setSwapsDisplay\", swaps])\r\n    endAni.push([\"startAnimation\"])\r\n\r\n\r\n    animations.unshift([\"doSim\", endAni])\r\n    return [sortedArray, animations, runTime]\r\n}\r\n\r\nfunction selectionSort(array: number[]){\r\n    let [sortedArray, animations, runTime] = sort(array)\r\n\r\n    let command = [\"do\", animations, \"$userSet\"]\r\n    return command\r\n}\r\n\r\n\r\nexport default selectionSort;","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\insertionSort.ts",["137","138"],"\r\n\r\n\r\n\r\nfunction sort(array: number[]){\r\n    let startTime = performance.now()\r\n    let sortedArray: number[] = array\r\n    let animations = []\r\n    let swaps = 0\r\n    let comparisons = 0\r\n\r\n    for (let i = 0; i < sortedArray.length; i++){\r\n        for (let j = i; j > 0; j--){\r\n            animations.push([\"setColor\", [j,j-1], \"$CHECKING\"])\r\n            comparisons++\r\n            if (sortedArray[j] < sortedArray[j-1]) {\r\n                const tmp = sortedArray[j]\r\n                sortedArray[j] = sortedArray[j-1]\r\n                sortedArray[j-1] = tmp\r\n                swaps++\r\n                animations.push([\"swap\", j, j-1])\r\n            } else {\r\n                animations.push([\"setColor\", [j,j-1], \"$BASE\"])\r\n                break;\r\n            }\r\n            animations.push([\"setColor\", [j,j-1], \"$BASE\"])\r\n        }\r\n    }\r\n\r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    animations.push([\"setColor\", [\"$ALL\"], \"$DONE\"])\r\n    animations.push([\"endAnimation\"])\r\n\r\n    let endAni = []\r\n    endAni.push([\"setRunTimeDisplay\", Math.round(runTime * 1000) / 1000])\r\n    endAni.push([\"setComparisonsDisplay\", comparisons])\r\n    endAni.push([\"setSwapsDisplay\", swaps])\r\n    endAni.push([\"startAnimation\"])\r\n\r\n\r\n    animations.unshift([\"doSim\", endAni])\r\n    return [sortedArray, animations, runTime]\r\n}\r\n\r\nfunction insertionSort(array: number[]){\r\n    let [sortedArray, animations, runTime] = sort(array)\r\n\r\n    let command = [\"do\", animations, \"$userSet\"]\r\n    return command\r\n}\r\n\r\n\r\nexport default insertionSort","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\InfoCard\\index.jsx",["139"],"import React, { useState } from 'react'\r\nimport './style.css'\r\nimport data from '../../data/algorithmInfo.json'\r\n\r\n\r\nfunction InfoCard({algorithmType, algorithmID}){\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isOpenHover, setIsOpenHover] = useState(false)\r\n    \r\n\r\n    let title = 'No Information Available'\r\n    let avgTimeComplexity = ''\r\n    let worstTimeComplexity = ''\r\n    let bestTimeComplexity  = ''\r\n    let memoryComplexity = ''\r\n    let stable = ''\r\n    let descriptionArray = []\r\n    let creditText = ''\r\n    let credit = ''\r\n\r\n    if (data[algorithmType][algorithmID]){\r\n        title = data[algorithmType][algorithmID].title || 'Unknown'\r\n        avgTimeComplexity = data[algorithmType][algorithmID].avgTimeComplexity || 'Unknown'\r\n        worstTimeComplexity = data[algorithmType][algorithmID].worstTimeComplexity || 'Unknown'\r\n        bestTimeComplexity = data[algorithmType][algorithmID].bestTimeComplexity || 'Unknown'\r\n        memoryComplexity = data[algorithmType][algorithmID].memoryComplexity || 'Unknown'\r\n        stable = data[algorithmType][algorithmID].stable || 'Unknown'\r\n        descriptionArray = data[algorithmType][algorithmID].description.split('\\n')\r\n        creditText = data[algorithmType][algorithmID].creditText || 'Description From'\r\n        credit = data[algorithmType][algorithmID].credit\r\n    }\r\n    \r\n\r\n    let card = (<div className='card' /*onMouseOver={() => setIsOpenHover(true)} onMouseLeave={() => setIsOpenHover(false)}*/>\r\n                    <p className='title'>{title}</p>\r\n                    <hr></hr>\r\n                    <p className='meta'>{`Worst Case Time Complexity: ${worstTimeComplexity}`}</p>\r\n                    <p className='meta'>{`Average Time Complexity: ${avgTimeComplexity}`}</p>\r\n                    <p className='meta'>{`Best Case Time Complexity: ${bestTimeComplexity}`}</p>\r\n                    <p className='meta'>{`Memory Complexity: ${memoryComplexity}`}</p>\r\n                    <p className='meta'>Stable: {stable} <i className={'material-icons help'} title='Whether the position of equal values stay the same relative to each other'>help</i></p>\r\n                    <hr></hr>\r\n                    {descriptionArray.map((item,idx) => <p className='description'>{item}</p>)}\r\n                    {credit ? <a className='credit' href={credit} >{`${creditText}: ${credit}`}</a> : null}     \r\n                </div>)\r\n    return (\r\n            <div className='card-container' /*onMouseOver={() => setIsOpenHover(true)} onMouseLeave={() => setIsOpenHover(false)}*/ >\r\n                {isOpen || isOpenHover ? card : null}\r\n                <button onClick={() => setIsOpen(!isOpen)} className='openCardButton' >\r\n                {isOpen ? <i className=\"material-icons\">close</i> : <i className=\"material-icons \">info</i> }\r\n                </button>  \r\n            </div>\r\n            )\r\n\r\n    }\r\n\r\nexport default InfoCard",["140","141"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\quickSort.ts",["142"],"function sort(array: any, animations: any): any {\r\n \r\n\r\n\r\n}\r\n\r\nfunction quickSort(array: number[]): [object[],number]{\r\n    const startTime = performance.now()\r\n    let animations: object[] = []\r\n\r\n\r\n    let sortedArray = sort(array,animations)\r\n\r\n\r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    //animations = [{command: 'setArray',array: sortedArray}]\r\n\r\n    return [animations, runTime]\r\n}\r\n\r\n\r\nexport default quickSort","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\heapSort.ts",["143"],"// FROM: https://levelup.gitconnected.com/heapsort-for-javascript-newbies-598d25477d55\r\n//TODO: Improve Animations\r\n\r\n\r\nfunction swap(array: number[], idx1: number, idx2: number, animations: object[]){\r\n    let tmp = array[idx1]\r\n    array[idx1] = array[idx2]\r\n    array[idx2] = tmp\r\n    animations.push([\"swap\", idx1, idx2])\r\n}\r\n\r\n\r\nfunction heapify(array: number[], length: number, idx: number, animations: object[], data: any){\r\n    let largest:number = idx\r\n    let left:number = idx * 2 + 1\r\n    let right:number = left + 1\r\n\r\n    animations.push([\"setColor\", [left,right], \"$CHECKING\"])\r\n    data.comparisons++\r\n    if(left < length && array[left] > array[largest]) {\r\n        largest = left\r\n    }\r\n    data.comparisons++\r\n    if(right < length && array[right] > array[largest]){\r\n        largest = right\r\n    }\r\n\r\n    animations.push([\"setColor\", [left,right], \"$BASE\"])\r\n\r\n    if(largest !== idx){\r\n        data.swaps++\r\n        swap(array, idx, largest, animations)\r\n        heapify(array, length, largest, animations, data)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction sort(array: number[], animations: object[], data: any){\r\n    let length = array.length\r\n    let idx = Math.floor(length / 2 - 1)\r\n    let k = length - 1;\r\n\r\n    while (idx >= 0) {\r\n        heapify(array, length, idx, animations, data)\r\n        idx--\r\n    }\r\n\r\n    while(k >= 0){\r\n        data.swaps++\r\n        swap(array, 0, k, animations)\r\n        heapify(array, k, 0, animations, data)\r\n        //animations.push({command: 'setColor',id: [k],color: '$DONE'})\r\n        k--\r\n    }\r\n\r\n    return array\r\n}\r\n\r\n\r\n\r\nfunction heapSort(array: number[]){\r\n    let startTime = performance.now()\r\n    var animations: object[] = [];\r\n    var data = {\r\n        swaps: 0,\r\n        comparisons: 0\r\n    }\r\n    let sortedArray = sort(array, animations,data)\r\n\r\n    let endTime = performance.now()\r\n\r\n    animations.push([\"setColor\", [\"$ALL\"], \"$DONE\"])\r\n\r\n    let runTime = endTime - startTime\r\n\r\n\r\n    animations.push([\"endAnimation\"])\r\n\r\n    let endAni = []\r\n    endAni.push([\"setRunTimeDisplay\", Math.round(runTime * 1000) / 1000])\r\n    endAni.push([\"setComparisonsDisplay\", data.comparisons])\r\n    endAni.push([\"setSwapsDisplay\", data.swaps])\r\n    endAni.push([\"startAnimation\"])\r\n\r\n\r\n    animations.unshift([\"doSim\", endAni])\r\n    let command = [\"do\", animations, \"$userSet\"]\r\n    return command\r\n}\r\n\r\nexport default heapSort","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\mergeSort.ts",["144"],"function mergeArrays(leftArray: any, rightArray: any, animations: any){\r\n    let leftIndex = 0 , rightIndex = 0\r\n\r\n    console.log(leftArray)\r\n\r\n    while(leftIndex < leftArray.length && rightIndex < rightArray.length){\r\n        animations.push({command: 'swap',id1: rightArray[rightIndex][0], id2: rightArray[rightIndex][0]})\r\n        let tmp = leftArray[leftIndex]\r\n        leftArray[leftIndex] = rightArray[rightIndex]\r\n        rightArray[rightIndex] = tmp\r\n        if (leftArray[leftIndex][1] < rightArray[rightIndex][1]){\r\n            leftIndex++\r\n        } else {\r\n            rightIndex++\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return \r\n}\r\n\r\n\r\n\r\nfunction sort(array: any, animations: any): any {\r\n    if (array.length <= 1) return array\r\n\r\n    const middle = Math.floor(array.length / 2);\r\n\r\n    const left = array.slice(0,middle);\r\n    const right = array.slice(middle);\r\n\r\n    return mergeArrays(sort(left,animations), sort(right,animations),animations)\r\n\r\n}\r\n\r\n\r\nfunction createIndexedArray(array: number[]){\r\n    let indexedArray = []\r\n    for (let i = 0; i < array.length - 1; i++){\r\n        indexedArray.push([i,array[i]])\r\n    }\r\n\r\n    return indexedArray\r\n}\r\n\r\nfunction mergeSort(array: number[]): [object[],number]{\r\n    const startTime = performance.now()\r\n    let animations: object[] = []\r\n    let sortedArray: number[];\r\n\r\n    let indexedArray: number[][] = createIndexedArray(array)\r\n\r\n\r\n    sortedArray = sort(indexedArray,animations)\r\n\r\n\r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    //animations = [{command: 'setArray',array: sortedArray}]\r\n\r\n    console.log(animations)\r\n    return [animations, runTime]\r\n}\r\n\r\n\r\nexport default mergeSort","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\Menu\\index.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\AlgoriComputePage.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\PathfindingVisualiserPage.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\HomePage.jsx",["145","146"],"import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Container from '../components/ChangeLog/Container'\r\nimport Item from '../components/ChangeLog/Item'\r\nimport './HomePageStyle.css'\r\n\r\n\r\nimport changeLogData from '../data/changelogData.json'\r\n\r\n\r\nfunction HomePage(){\r\n    const [isAllOpen, setIsAllOpen] = useState(false)\r\n    const [isNewestFirst, setIsNewestFirst] = useState(true)\r\n    console.log(isAllOpen)\r\n\r\n    let changeLogItems = changeLogData.slice()\r\n    if (isNewestFirst) changeLogItems = changeLogItems.reverse()\r\n\r\n    let changeItems = changeLogItems.map((value, idx) => {\r\n        let dontDisplay = value.dontDisplay\r\n        let displayAfter = value.displayAfter\r\n        if (displayAfter) {\r\n            const [day, month, year] = displayAfter.split('/')\r\n            displayAfter = `${year}-${month}-${day}`\r\n            \r\n        }\r\n        let date = new Date().getTime()\r\n        let afterDate = Date.parse(displayAfter)\r\n        let timeUntil = afterDate - date\r\n        if ((!dontDisplay && !displayAfter) || (timeUntil <= 0)) return <Item key={idx}  isOpen={isAllOpen} changes={value.modifications} date={value.isNext ? `Planned for ${value.date}` : value.date} version={value.isNext ? 'Next update' : value.version} title={value.title}> <p>{value.info}</p> </Item>\r\n    })\r\n\r\n    return (\r\n        <div className='changeLog'>\r\n            <div className='changeLogMenuItems'>\r\n                <div className='openAllChangesButton' onClick={() => setIsAllOpen(!isAllOpen)}>{isAllOpen ? 'Close All' : 'Open All'}</div>\r\n                <div className='openAllChangesButton' onClick={() => setIsNewestFirst(!isNewestFirst)}>{isNewestFirst ? 'Order Oldest to Newest' : 'Order Newest to Oldest'}</div>\r\n            </div>\r\n            <Container titleBgColor='' titleTxtColor='' infoBgColor='' infoTxtColor=''>\r\n                {changeItems}\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HomePage","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\algoithms\\sorting\\reverseArray.ts",["147"],"\r\nfunction sort(array: any, animations: any): any {\r\n    let sortedArray = array.slice()\r\n    let swaps = 0\r\n\r\n    for (let i = 0; i < Math.floor(sortedArray.length / 2); i++){\r\n        animations.push([\"setColor\", [i,(sortedArray.length-1-i)], \"$CHECKING\"])\r\n        let tmp = sortedArray[i]\r\n        sortedArray[i] = sortedArray[sortedArray.length-1-i]\r\n        sortedArray[sortedArray.length-1-i] = tmp\r\n        swaps++\r\n        animations.push([\"swap\", i, (sortedArray.length-1-i)])\r\n        animations.push([\"setColor\", [i,(sortedArray.length-1-i)], \"$DONE\"])\r\n    }\r\n\r\n    animations.push([\"setColor\", [(Math.ceil(sortedArray.length / 2)) - 1], \"$DONE\"])\r\n\r\n    return [sortedArray, animations, swaps]\r\n\r\n\r\n}\r\n\r\nfunction reverseArray(array: number[]){\r\n    const startTime = performance.now()\r\n    let animations: object[] = []\r\n    let sortedArray: number[];\r\n    let swaps:number\r\n\r\n\r\n    [sortedArray, animations, swaps] = sort(array,animations)\r\n\r\n\r\n    const endTime = performance.now()\r\n    const runTime = endTime - startTime\r\n\r\n    animations.push([\"endAnimation\"])\r\n\r\n    let endAni = []\r\n    endAni.push([\"setRunTimeDisplay\", Math.round(runTime * 1000) / 1000])\r\n    endAni.push([\"setComparisonsDisplay\", 0])\r\n    endAni.push([\"setSwapsDisplay\", swaps])\r\n    endAni.push([\"startAnimation\"])\r\n\r\n\r\n    animations.unshift([\"doSim\", endAni])\r\n    let command = [\"do\", animations, \"$userSet\"]\r\n    return command\r\n}\r\n\r\n\r\nexport default reverseArray","C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\index.jsx",["148","149"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\Item.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\ChangeLog\\Container.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\Console\\index.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\PathfindingVisualiser\\index.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\LatestChangesCard\\index.jsx",[],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\App.jsx",["150","151","152"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\components\\PathfindingVisualiser\\index-depr.jsx",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172"],"C:\\Users\\jackg\\Documents\\Projects\\WebDevelopement\\Algori\\algori\\src\\pages\\UnavailablePage.jsx",["173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":31,"column":41,"nodeType":"180","messageId":"181","endLine":31,"endColumn":43},{"ruleId":"182","severity":1,"message":"183","line":62,"column":8,"nodeType":"184","endLine":62,"endColumn":10,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":69,"column":17,"nodeType":"188","messageId":"189","endLine":69,"endColumn":25},{"ruleId":"178","severity":1,"message":"179","line":152,"column":29,"nodeType":"180","messageId":"181","endLine":152,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":153,"column":29,"nodeType":"180","messageId":"181","endLine":153,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":209,"column":35,"nodeType":"192","messageId":"193","endLine":209,"endColumn":37},{"ruleId":"178","severity":1,"message":"194","line":209,"column":47,"nodeType":"180","messageId":"181","endLine":209,"endColumn":49},{"ruleId":"190","severity":1,"message":"191","line":209,"column":52,"nodeType":"192","messageId":"193","endLine":209,"endColumn":54},{"ruleId":"190","severity":1,"message":"195","line":209,"column":52,"nodeType":"192","messageId":"193","endLine":209,"endColumn":54},{"ruleId":"190","severity":1,"message":"195","line":209,"column":84,"nodeType":"192","messageId":"193","endLine":209,"endColumn":86},{"ruleId":"178","severity":1,"message":"194","line":209,"column":96,"nodeType":"180","messageId":"181","endLine":209,"endColumn":98},{"ruleId":"178","severity":1,"message":"179","line":210,"column":34,"nodeType":"180","messageId":"181","endLine":210,"endColumn":36},{"ruleId":"178","severity":1,"message":"179","line":212,"column":34,"nodeType":"180","messageId":"181","endLine":212,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":249,"column":34,"nodeType":"192","messageId":"193","endLine":249,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":249,"column":51,"nodeType":"192","messageId":"193","endLine":249,"endColumn":53},{"ruleId":"190","severity":1,"message":"191","line":250,"column":46,"nodeType":"192","messageId":"193","endLine":250,"endColumn":48},{"ruleId":"190","severity":1,"message":"191","line":250,"column":75,"nodeType":"192","messageId":"193","endLine":250,"endColumn":77},{"ruleId":"178","severity":1,"message":"179","line":346,"column":38,"nodeType":"180","messageId":"181","endLine":346,"endColumn":40},{"ruleId":"196","severity":1,"message":"197","line":401,"column":29,"nodeType":"198","messageId":"199","endLine":402,"endColumn":35},{"ruleId":"196","severity":1,"message":"197","line":408,"column":29,"nodeType":"198","messageId":"199","endLine":409,"endColumn":35},{"ruleId":"196","severity":1,"message":"197","line":415,"column":29,"nodeType":"200","messageId":"199","endLine":415,"endColumn":35},{"ruleId":"196","severity":1,"message":"197","line":435,"column":21,"nodeType":"200","messageId":"199","endLine":435,"endColumn":27},{"ruleId":"201","severity":1,"message":"202","line":45,"column":10,"nodeType":"188","messageId":"189","endLine":45,"endColumn":21},{"ruleId":"201","severity":1,"message":"203","line":45,"column":35,"nodeType":"188","messageId":"189","endLine":45,"endColumn":42},{"ruleId":"201","severity":1,"message":"202","line":55,"column":10,"nodeType":"188","messageId":"189","endLine":55,"endColumn":21},{"ruleId":"201","severity":1,"message":"203","line":55,"column":35,"nodeType":"188","messageId":"189","endLine":55,"endColumn":42},{"ruleId":"201","severity":1,"message":"202","line":48,"column":10,"nodeType":"188","messageId":"189","endLine":48,"endColumn":21},{"ruleId":"201","severity":1,"message":"203","line":48,"column":35,"nodeType":"188","messageId":"189","endLine":48,"endColumn":42},{"ruleId":"186","severity":1,"message":"204","line":8,"column":25,"nodeType":"188","messageId":"189","endLine":8,"endColumn":39},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"201","severity":1,"message":"202","line":12,"column":9,"nodeType":"188","messageId":"189","endLine":12,"endColumn":20},{"ruleId":"201","severity":1,"message":"202","line":70,"column":9,"nodeType":"188","messageId":"189","endLine":70,"endColumn":20},{"ruleId":"201","severity":1,"message":"202","line":55,"column":5,"nodeType":"188","messageId":"189","endLine":55,"endColumn":16},{"ruleId":"186","severity":1,"message":"205","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":18},{"ruleId":"206","severity":1,"message":"207","line":19,"column":55,"nodeType":"208","messageId":"209","endLine":19,"endColumn":57},{"ruleId":"201","severity":1,"message":"202","line":30,"column":6,"nodeType":"188","messageId":"189","endLine":30,"endColumn":17},{"ruleId":"186","severity":1,"message":"210","line":1,"column":8,"nodeType":"188","messageId":"189","endLine":1,"endColumn":13},{"ruleId":"186","severity":1,"message":"211","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"205","line":7,"column":31,"nodeType":"188","messageId":"189","endLine":7,"endColumn":39},{"ruleId":"186","severity":1,"message":"212","line":7,"column":56,"nodeType":"188","messageId":"189","endLine":7,"endColumn":66},{"ruleId":"178","severity":1,"message":"179","line":24,"column":29,"nodeType":"180","messageId":"181","endLine":24,"endColumn":31},{"ruleId":"186","severity":1,"message":"187","line":45,"column":17,"nodeType":"188","messageId":"189","endLine":45,"endColumn":25},{"ruleId":"213","severity":1,"message":"214","line":46,"column":13,"nodeType":"215","messageId":"216","endLine":424,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":138,"column":30,"nodeType":"192","messageId":"193","endLine":138,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":138,"column":43,"nodeType":"192","messageId":"193","endLine":138,"endColumn":45},{"ruleId":"190","severity":1,"message":"191","line":139,"column":30,"nodeType":"192","messageId":"193","endLine":139,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":139,"column":43,"nodeType":"192","messageId":"193","endLine":139,"endColumn":45},{"ruleId":"190","severity":1,"message":"191","line":194,"column":35,"nodeType":"192","messageId":"193","endLine":194,"endColumn":37},{"ruleId":"178","severity":1,"message":"194","line":194,"column":47,"nodeType":"180","messageId":"181","endLine":194,"endColumn":49},{"ruleId":"190","severity":1,"message":"191","line":194,"column":52,"nodeType":"192","messageId":"193","endLine":194,"endColumn":54},{"ruleId":"190","severity":1,"message":"195","line":194,"column":52,"nodeType":"192","messageId":"193","endLine":194,"endColumn":54},{"ruleId":"190","severity":1,"message":"195","line":194,"column":84,"nodeType":"192","messageId":"193","endLine":194,"endColumn":86},{"ruleId":"178","severity":1,"message":"194","line":194,"column":96,"nodeType":"180","messageId":"181","endLine":194,"endColumn":98},{"ruleId":"178","severity":1,"message":"179","line":195,"column":34,"nodeType":"180","messageId":"181","endLine":195,"endColumn":36},{"ruleId":"178","severity":1,"message":"179","line":197,"column":34,"nodeType":"180","messageId":"181","endLine":197,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":234,"column":34,"nodeType":"192","messageId":"193","endLine":234,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":234,"column":51,"nodeType":"192","messageId":"193","endLine":234,"endColumn":53},{"ruleId":"190","severity":1,"message":"191","line":235,"column":46,"nodeType":"192","messageId":"193","endLine":235,"endColumn":48},{"ruleId":"190","severity":1,"message":"191","line":235,"column":75,"nodeType":"192","messageId":"193","endLine":235,"endColumn":77},{"ruleId":"196","severity":1,"message":"197","line":422,"column":21,"nodeType":"217","messageId":"199","endLine":423,"endColumn":27},{"ruleId":"186","severity":1,"message":"218","line":446,"column":21,"nodeType":"188","messageId":"189","endLine":446,"endColumn":25},{"ruleId":"186","severity":1,"message":"211","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'AnimateEngine' and 'numBars'. Either include them or remove the dependency array.","ArrayExpression",["221"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Expected '!==' and instead saw '!='.","Unexpected mix of '||' and '&&'.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","BreakStatement","@typescript-eslint/no-unused-vars","'sortedArray' is assigned a value but never used.","'runTime' is assigned a value but never used.","'setIsOpenHover' is assigned a value but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'React' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","ReturnStatement","'item' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},"Update the dependencies array to be: [AnimateEngine, numBars]",{"range":"224","text":"225"},[2462,2464],"[AnimateEngine, numBars]"]